name: Release Charts

on:
  workflow_dispatch:
    inputs:
      chart_to_release:
        type: choice
        description: Chart to release
        options:
        - lamassu
        - softhsm
      release_version:
        type: string
        description: Helm Chart version (example; 2.0.0)
      app_version:
        type: string
        description: Backend version (example; 2.0.0)
      ui_version:
        type: string
        description: UI docker image version
      force_overwrite:
        type: boolean
        description: Overwrite existing Helm Chart version
        default: false
        
run-name: >-
  ${{ github.event.inputs.force_overwrite == 'true'
    && format('[FORCE] Release {0} - {1} (app version: {2}, ui version: {3})', github.event.inputs.chart_to_release, github.event.inputs.release_version, github.event.inputs.app_version,  github.event.inputs.ui_version)
    || format('Release {0} - {1} (app version: {2}, ui version: {3})', github.event.inputs.chart_to_release, github.event.inputs.release_version, github.event.inputs.app_version,  github.event.inputs.ui_version) }}

jobs:
  delete-release-tag:
    if: ${{ github.event.inputs.force_overwrite == 'true' }} 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Delete Release & Tag
        run: gh release delete -y ${{ github.event.inputs.chart_to_release }}-${{ github.event.inputs.release_version }} --cleanup-tag 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate-charts-changelog-update-versions:
    runs-on: ubuntu-latest
    needs: delete-release-tag
    if: always()
    container: quay.io/git-chglog/git-chglog:0.15.0
    steps:
      - name: fail if conditional job failed
        if: ${{ needs.delete-release-tag.result == 'failure' }}
        run: exit 1
        
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install main dependencies
        run: |
          apk add bash git grep yq
          
      - name: Update UI docker image version
        run: |
          yq eval '.services.ui.image = "ghcr.io/lamassuiot/lamassu-ui:${{ github.event.inputs.ui_version }}"' -i charts/${{ github.event.inputs.chart_to_release }}/values.yaml
    
      - name: Update Backend docker image version
        run: |
          yq eval '.services.va.image = "ghcr.io/lamassuiot/lamassu-va:${{ github.event.inputs.app_version }}"' -i charts/${{ github.event.inputs.chart_to_release }}/values.yaml
          yq eval '.services.ca.image = "ghcr.io/lamassuiot/lamassu-ca:${{ github.event.inputs.app_version }}"' -i charts/${{ github.event.inputs.chart_to_release }}/values.yaml
          yq eval '.services.deviceManager.image = "ghcr.io/lamassuiot/lamassu-devmanager:${{ github.event.inputs.app_version }}"' -i charts/${{ github.event.inputs.chart_to_release }}/values.yaml
          yq eval '.services.dmsManager.image = "ghcr.io/lamassuiot/lamassu-dmsmanager:${{ github.event.inputs.app_version }}"' -i charts/${{ github.event.inputs.chart_to_release }}/values.yaml
          yq eval '.services.alerts.image = "ghcr.io/lamassuiot/lamassu-alerts:${{ github.event.inputs.app_version }}"' -i charts/${{ github.event.inputs.chart_to_release }}/values.yaml
          yq eval '.services.awsConnector.image = "ghcr.io/lamassuiot/lamassu-aws-connector:${{ github.event.inputs.app_version }}"' -i charts/${{ github.event.inputs.chart_to_release }}/values.yaml
      
      - name: Generate charts changelog files
        shell: bash
        run: |
          set -x
          
          chart_name=${{ github.event.inputs.chart_to_release }}
          chart_version=${{ github.event.inputs.release_version }}
          chart_tag="${chart_name}-${chart_version}"
          chart_path="charts/${chart_name}"

          #
          # Generate chart CHANGELOG.md file.
          git-chglog                                \
              --output "${chart_path}/CHANGELOG.md" \
              --tag-filter-pattern "${chart_name}"  \
              --next-tag "${chart_tag}"             \
              --path "${chart_path}"

          #
          # Generate RELEASE-NOTES.md file (used for Github release notes and ArtifactHub "changes" annotation).
          git-chglog                                    \
              --output "${chart_path}/RELEASE-NOTES.md" \
              --tag-filter-pattern "${chart_name}"      \
              --next-tag "${chart_tag}"                 \
              --path "${chart_path}" "${chart_tag}"

      - name: Update Chart.yaml file with the new version
        run: |
          yq eval ".version = \"${{ github.event.inputs.release_version }}\"" -i charts/${{ github.event.inputs.chart_to_release }}/Chart.yaml
          yq eval ".appVersion = \"${{ github.event.inputs.app_version }}\"" -i charts/${{ github.event.inputs.chart_to_release }}/Chart.yaml

      - name: Commit charts Chart.yaml, CHANGELOG.md and RELEASE-NOTES.md file 
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

          # Commit changes locally.
          chart_name=${{ github.event.inputs.chart_to_release }}
          chart_version=${{ github.event.inputs.release_version }}
          chart_path="charts/${chart_name}"

          git add ${chart_path}/Chart.yaml
          git add ${chart_path}/values.yaml
          git add ${chart_path}/CHANGELOG.md
          git add ${chart_path}/RELEASE-NOTES.md
          git commit -m "Update Chart.yaml, values.yaml CHANGELOG and RELEASE-NOTES for chart ${chart_name} ${chart_version}"

          # Push changes to branch.          
          git push origin $GITHUB_REF_NAME
  release-charts:
    runs-on: ubuntu-latest
    needs: generate-charts-changelog-update-versions
    if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - run: git checkout HEAD #Checks out by default to SHA that tiggered the executin. Checkout to main to get the commit maded by the prev Job.

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run Chart Releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NOTES_FILE: RELEASE-NOTES.md # Relative to the chart directory
