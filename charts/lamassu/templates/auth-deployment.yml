{{- if .Values.services.keycloak.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: {{.Release.Namespace}}
  labels:
    app: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: {{.Values.services.keycloak.image}}
          imagePullPolicy: {{ .Values.global.imagePullPolicy | quote }}
          ports:
            - containerPort: 8080
            - containerPort: 8443
          livenessProbe:
            httpGet:
              path: /auth/health
              port: 8080
            initialDelaySeconds: 180
            periodSeconds: 3
          env:
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              value: jdbc:postgresql://{{ .Values.postgres.hostname }}:{{ .Values.postgres.port }}/auth #Service Name for HA postgres
            - name: KC_DB_USERNAME
              value: {{ .Values.postgres.username }}
            - name: KC_DB_PASSWORD
              value: {{ .Values.postgres.password }}
            - name: KEYCLOAK_ADMIN
              value: {{.Values.services.keycloak.adminCreds.username}}
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: {{.Values.services.keycloak.adminCreds.password}}
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_PROXY
              value: reencrypt
            - name: KC_HTTP_RELATIVE_PATH
              value: /auth
            - name: KC_HOSTNAME_PATH
              value: /auth
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: HTTP_ADDRESS_FORWARDING
              value: "true"
            - name: QUARKUS_HTTP_ACCESS_LOG_ENABLED
              value: "true"
            # - name: QUARKUS_HTTP_ACCESS_LOG_PATTERN
            #   value: "%r\n%{ALL_REQUEST_HEADERS}"
      restartPolicy: Always
{{- end -}}
