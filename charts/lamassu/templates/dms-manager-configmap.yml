kind: ConfigMap
apiVersion: v1
metadata:
  name: dms-manager-config
  namespace: {{.Release.Namespace}}
data:
  init.sh: |
    #!/bin/bash
    BLUE='\033[0;34m'
    GREEN='\033[0;32m'
    ORANGE='\033[0;33m'
    RED='\033[0;31m'
    NOCOLOR='\033[0m'

    # The bundle certificate file
    BUNDLE_CRT_FILE=/shared/bundle.crt

    # The output root certificate file
    ROOT_CA_CRT_FILE=/shared/root.crt
    
    touch $BUNDLE_CRT_FILE

    echo -e "${BLUE}Bundling certificates...${NOCOLOR}"
    if [ ! -f /certs/downstream.crt ]; then
      echo -e "${RED}downstream.crt not found!${NOCOLOR}"
      exit 1
    else
      cat /certs/downstream.crt > $BUNDLE_CRT_FILE
    fi

    if [ -f /certs/downstream-ca.crt ]; then
      echo -e "${GREEN}downstream-ca.crt found!${NOCOLOR}"
      cat /certs/downstream-ca.crt >> $BUNDLE_CRT_FILE
    else
      echo -e "${ORANGE}downstream-ca.crt not found!${NOCOLOR}"
    fi

    echo -e "${BLUE}Printing certificate bundle...${NOCOLOR}"
    cat $BUNDLE_CRT_FILE

    echo -e "${BLUE}Extracting root (lowest hierarchy cert in bundle)...${NOCOLOR}"
    touch $ROOT_CA_CRT_FILE
  
    # Count the number of certificates in the bundle
    CERT_COUNT=$(grep -c 'END CERTIFICATE' $BUNDLE_CRT_FILE)

    # Extract the root certificate
    awk "BEGIN {p=0;} /BEGIN CERTIFICATE/ {p++;} p==$CERT_COUNT" $BUNDLE_CRT_FILE > $ROOT_CA_CRT_FILE

    echo "Root CA certificate has been extracted to $ROOT_CA_CRT_FILE"
    echo -e "${GREEN}Certificate Root extracted!${NOCOLOR}"
    cat $ROOT_CA_CRT_FILE

  config: |
    logs:
      level: "trace"

    server:
      log_level: "debug"
      health_check: false
      listen_address: "0.0.0.0"
      port: 8085
      protocol: "http" #http | https

    publisher_event_bus:
      log_level: "debug"
      provider: amqp
      enabled: true
      amqp:
        protocol: amqp #amqp | amqps
        hostname: {{ .Values.amqp.hostname }}
        port: {{ .Values.amqp.port }}
        basic_auth:
          enabled: true
          username: {{ .Values.amqp.username }}
          password: {{ .Values.amqp.password }}
          
    storage:
      log_level: info
      provider: "postgres" #couch_db | postgres | dynamo_db
      postgres: 
        hostname: {{ .Values.postgres.hostname }}
        port: {{ .Values.postgres.port }}
        username: {{ .Values.postgres.username }}
        password: {{ .Values.postgres.password }}
    
    device_manager_client:
      log_level: debug
      auth_mode: noauth
      protocol: http
      hostname: device-manager
      port: 8085
    
    ca_client:
      log_level: debug
      auth_mode: noauth
      protocol: http
      hostname: ca
      port: 8085
    
    downstream_cert_file: /shared/root.crt