apiVersion: apps/v1
kind: StatefulSet
metadata:  
  name: ca
  namespace: {{.Release.Namespace}}
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: ca
spec:
  replicas: 1
  serviceName: "ca"
  selector:
    matchLabels:
      app: ca
  template:
    metadata:
      labels:
        app: ca
    spec:
      containers:
        - name: ca
          image: {{ .Values.services.ca.image }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy | quote }}
          tty: true
          env:
            {{- range .Values.services.ca.cryptoEngines.engines }}
            {{- if eq .type "pkcs11" }}
            {{- if .module_extra_options.env }}
            {{- range $key, $value := .module_extra_options.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8085
            initialDelaySeconds: 3
            periodSeconds: 3
          volumeMounts:
            - name: api-config
              mountPath: /etc/lamassuiot/config.yml
              subPath: config
            - name: golang-engine-storage
              mountPath: /crypto/fs
          ports:
            - containerPort: 8085
      restartPolicy: Always
      volumes:
        - name: api-config
          configMap:  
            name: ca-config
  volumeClaimTemplates:
  # If no FileSystem engine is defined, the PVC wont be used
  - metadata:
      name: golang-engine-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: null
      resources:
        requests:
          storage: 1Gi
